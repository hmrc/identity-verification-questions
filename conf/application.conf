# Copyright 2022 HM Revenue & Customs
#

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = question-repository

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

# The mongoComponent can be injected if you register the PlayMongoModule with play
play.modules.enabled += "uk.gov.hmrc.mongo.play.PlayMongoModule"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key = "AehQoTVAyauXFyFaAadFakIiFTYy4OXM7DvVIskMdp3P5KqeP8fqYEF9z4otAD83"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Lost Creds, VAT Reg and IV can call question-repository and utilise the questions within it for now
allowedUserAgentList=["identity-verification", "lost-credentials", "lost-credentials-frontend"]

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  uk.gov.hmrc.questionrepository.controllers.MicroserviceHelloWorldController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}

p60.newquestions.enabled = true

question {
  record {
    duration = P1D
  }
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = false
}

# Microservice specific config

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

mongodb {
  uri = "mongodb://localhost:27017/question-repository"
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {
    auth {
      host = localhost
      port = 8500
    }

    bas-proxy {
       host = localhost
       port = 9554
    }

    identity-verification {
       host = localhost
       port = 9927
    }

    p60Service {
      host = localhost
      port = 9928
      hod {
        authorizationToken = theLocalDevToken
        environmentHeader = localDev
      }
      identifier.required = [nino]
      bufferInMonths = 2
#       disabled.start = "2021-07-24T22:50:00.000"
#       disabled.end   = "2022-07-25T02:40:00.000"
    }

    passportService {
       host = localhost
       port = 9928
       identifier.required = [dob]
       authenticationData {
         organisationId = THMRC
         organisationApplicationId = THMRC001
         organisationUserName = THMRC_WS
         organisationUserPassword = passport-pwd
       }
    }

    scpEmailService {
      identifier.required = [nino]
    }

    dvlaService {
      host = localhost
      port = 9928
      identifier.required = [dob]
    }
  }
}

